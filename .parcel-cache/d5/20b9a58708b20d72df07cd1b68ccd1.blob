var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "default", function () {
  return _libAxiosJsDefault.default;
});
_parcelHelpers.export(exports, "Axios", function () {
  return Axios;
});
_parcelHelpers.export(exports, "AxiosError", function () {
  return AxiosError;
});
_parcelHelpers.export(exports, "CanceledError", function () {
  return CanceledError;
});
_parcelHelpers.export(exports, "isCancel", function () {
  return isCancel;
});
_parcelHelpers.export(exports, "CancelToken", function () {
  return CancelToken;
});
_parcelHelpers.export(exports, "VERSION", function () {
  return VERSION;
});
_parcelHelpers.export(exports, "all", function () {
  return all;
});
_parcelHelpers.export(exports, "Cancel", function () {
  return Cancel;
});
_parcelHelpers.export(exports, "isAxiosError", function () {
  return isAxiosError;
});
_parcelHelpers.export(exports, "spread", function () {
  return spread;
});
_parcelHelpers.export(exports, "toFormData", function () {
  return toFormData;
});
_parcelHelpers.export(exports, "AxiosHeaders", function () {
  return AxiosHeaders;
});
_parcelHelpers.export(exports, "HttpStatusCode", function () {
  return HttpStatusCode;
});
_parcelHelpers.export(exports, "formToJSON", function () {
  return formToJSON;
});
_parcelHelpers.export(exports, "mergeConfig", function () {
  return mergeConfig;
});
var _libAxiosJs = require('./lib/axios.js');
var _libAxiosJsDefault = _parcelHelpers.interopDefault(_libAxiosJs);
// This module is intended to unwrap Axios default export as named.
// Keep top-level export same with static properties
// so that it can keep same with es module or cjs
const {Axios, AxiosError, CanceledError, isCancel, CancelToken, VERSION, all, Cancel, isAxiosError, spread, toFormData, AxiosHeaders, HttpStatusCode, formToJSON, mergeConfig} = _libAxiosJsDefault.default;
