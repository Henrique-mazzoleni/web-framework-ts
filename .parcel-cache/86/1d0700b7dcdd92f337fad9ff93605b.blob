"use strict";
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _coreAxiosErrorJs = require('../core/AxiosError.js');
var _coreAxiosErrorJsDefault = _parcelHelpers.interopDefault(_coreAxiosErrorJs);
var _utilsJs = require('../utils.js');
var _utilsJsDefault = _parcelHelpers.interopDefault(_utilsJs);
/**
* A `CanceledError` is an object that is thrown when an operation is canceled.
*
* @param {string=} message The message.
* @param {Object=} config The config.
* @param {Object=} request The request.
*
* @returns {CanceledError} The created error.
*/
function CanceledError(message, config, request) {
  // eslint-disable-next-line no-eq-null,eqeqeq
  _coreAxiosErrorJsDefault.default.call(this, message == null ? 'canceled' : message, _coreAxiosErrorJsDefault.default.ERR_CANCELED, config, request);
  this.name = 'CanceledError';
}
_utilsJsDefault.default.inherits(CanceledError, _coreAxiosErrorJsDefault.default, {
  __CANCEL__: true
});
exports.default = CanceledError;
