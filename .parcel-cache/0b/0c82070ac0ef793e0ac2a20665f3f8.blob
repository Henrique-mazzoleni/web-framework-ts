"use strict";
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require('./utils.js');
var _utilsJsDefault = _parcelHelpers.interopDefault(_utilsJs);
var _helpersBindJs = require('./helpers/bind.js');
var _helpersBindJsDefault = _parcelHelpers.interopDefault(_helpersBindJs);
var _coreAxiosJs = require('./core/Axios.js');
var _coreAxiosJsDefault = _parcelHelpers.interopDefault(_coreAxiosJs);
var _coreMergeConfigJs = require('./core/mergeConfig.js');
var _coreMergeConfigJsDefault = _parcelHelpers.interopDefault(_coreMergeConfigJs);
var _defaultsIndexJs = require('./defaults/index.js');
var _defaultsIndexJsDefault = _parcelHelpers.interopDefault(_defaultsIndexJs);
var _helpersFormDataToJSONJs = require('./helpers/formDataToJSON.js');
var _helpersFormDataToJSONJsDefault = _parcelHelpers.interopDefault(_helpersFormDataToJSONJs);
var _cancelCanceledErrorJs = require('./cancel/CanceledError.js');
var _cancelCanceledErrorJsDefault = _parcelHelpers.interopDefault(_cancelCanceledErrorJs);
var _cancelCancelTokenJs = require('./cancel/CancelToken.js');
var _cancelCancelTokenJsDefault = _parcelHelpers.interopDefault(_cancelCancelTokenJs);
var _cancelIsCancelJs = require('./cancel/isCancel.js');
var _cancelIsCancelJsDefault = _parcelHelpers.interopDefault(_cancelIsCancelJs);
var _envDataJs = require('./env/data.js');
var _helpersToFormDataJs = require('./helpers/toFormData.js');
var _helpersToFormDataJsDefault = _parcelHelpers.interopDefault(_helpersToFormDataJs);
var _coreAxiosErrorJs = require('./core/AxiosError.js');
var _coreAxiosErrorJsDefault = _parcelHelpers.interopDefault(_coreAxiosErrorJs);
var _helpersSpreadJs = require('./helpers/spread.js');
var _helpersSpreadJsDefault = _parcelHelpers.interopDefault(_helpersSpreadJs);
var _helpersIsAxiosErrorJs = require('./helpers/isAxiosError.js');
var _helpersIsAxiosErrorJsDefault = _parcelHelpers.interopDefault(_helpersIsAxiosErrorJs);
var _coreAxiosHeadersJs = require("./core/AxiosHeaders.js");
var _coreAxiosHeadersJsDefault = _parcelHelpers.interopDefault(_coreAxiosHeadersJs);
var _helpersHttpStatusCodeJs = require('./helpers/HttpStatusCode.js');
var _helpersHttpStatusCodeJsDefault = _parcelHelpers.interopDefault(_helpersHttpStatusCodeJs);
/**
* Create an instance of Axios
*
* @param {Object} defaultConfig The default config for the instance
*
* @returns {Axios} A new instance of Axios
*/
function createInstance(defaultConfig) {
  const context = new _coreAxiosJsDefault.default(defaultConfig);
  const instance = _helpersBindJsDefault.default(_coreAxiosJsDefault.default.prototype.request, context);
  // Copy axios.prototype to instance
  _utilsJsDefault.default.extend(instance, _coreAxiosJsDefault.default.prototype, context, {
    allOwnKeys: true
  });
  // Copy context to instance
  _utilsJsDefault.default.extend(instance, context, null, {
    allOwnKeys: true
  });
  // Factory for creating new instances
  instance.create = function create(instanceConfig) {
    return createInstance(_coreMergeConfigJsDefault.default(defaultConfig, instanceConfig));
  };
  return instance;
}
// Create the default instance to be exported
const axios = createInstance(_defaultsIndexJsDefault.default);
// Expose Axios class to allow class inheritance
axios.Axios = _coreAxiosJsDefault.default;
// Expose Cancel & CancelToken
axios.CanceledError = _cancelCanceledErrorJsDefault.default;
axios.CancelToken = _cancelCancelTokenJsDefault.default;
axios.isCancel = _cancelIsCancelJsDefault.default;
axios.VERSION = _envDataJs.VERSION;
axios.toFormData = _helpersToFormDataJsDefault.default;
// Expose AxiosError class
axios.AxiosError = _coreAxiosErrorJsDefault.default;
// alias for CanceledError for backward compatibility
axios.Cancel = axios.CanceledError;
// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = _helpersSpreadJsDefault.default;
// Expose isAxiosError
axios.isAxiosError = _helpersIsAxiosErrorJsDefault.default;
// Expose mergeConfig
axios.mergeConfig = _coreMergeConfigJsDefault.default;
axios.AxiosHeaders = _coreAxiosHeadersJsDefault.default;
axios.formToJSON = thing => _helpersFormDataToJSONJsDefault.default(_utilsJsDefault.default.isHTMLForm(thing) ? new FormData(thing) : thing);
axios.HttpStatusCode = _helpersHttpStatusCodeJsDefault.default;
axios.default = axios;
exports.default = axios;
